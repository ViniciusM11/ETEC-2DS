<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAABGdBTUEAALGPC/xhBQAAGZtJREFUeF7t
        nXm0vVVZxyk0TRAVUYYAxwARFcUhyUwhHFHKFENEyRWDI2BooqGiMYhKSxJwQkMGBU0DRSEckUokEdSw
        FBBHFJFEKy2bvp/V/a314/rce8+953n2u99zvp+1Pn/B7+5z9nvOefe79zNsYIwxxhhjjDHGGGOMMcYY
        Y4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMyeZOi7ydNMZ0zC/JreUj5bPl
        q+Vb5AfkxfIqeYP8d/m/K/g/8ofyavk5eaE8XR4rXyCfJB8oby+NMUXcVT5GvlSeJb8sfyajL22135B/
        I98kD5QPkreWxphVwJ16J/k8+R75bRl94XqSHx1WAifLZ0pWGsaYRWwpD5AflCyhoy/T2LxGvlPuJ+8i
        jZlLdpavlJdJnpGjL8us+N/yUsn7fbBk1WLMzLKNPER+QUZfiHnxW5Jn/EdIf+nNTMBO9cHyb+Ws37nX
        4nXyeLmjnAc2lLvL10k2Na+QX5V/L8+QnHL8mjQjYQf5F/JmGX3A7S/K8v658o5y1vgVyWqO1Uz03teX
        R51zJY93pkNYhj5Zfkz67r12fyr/UvI8Pwvwhb1SRu91Of9LHiN9fNkJLMeeIb8kowtm1+5nJUd2t5Fj
        hGNSfrii9zapH5EbSTMQLMcIGiGiLLpANs/r5Z/IO8gxwOs8R0bvZS2eL7mhmIawRN9HXiuji2LrZM+D
        jaytZK/sIit+/AlzNo3YTf6DjC6EbSfReCdKgo16gRvAi2RVePJ/SDZ5TSHbS56Vogtgh5OknTdK8gGG
        hJMCEoqi15gpyUamgF+Vr5VDJZHYyfxXyXUaIsPuofLrMnpd2XJXn8Xjx0F5giRmO5pw26ffkwQo3UpW
        w1L9MMmXL3otVbI/ZBIgCSNzx9S2l3z8J8oqNpUEtURjV3uCNFNCwAt3hWiC7fg8T95TZvJwSV5+NF4L
        eU9mjWwiSauMJtaOWwJWOJpiv2UaWKq/RP6njMZp5SelWQO/KUmuiCbVzo7st+wh18JmkqCV6O+2ltMf
        swr4hT5c/lxGE2pnU+LoecaeFNJpJ0lGaeU7pJkQqqAOtZlih5d9mKfL5fhleYTs7UbAqYKZALKiWp17
        2r59n2RZvhhOXi6Q0b8ZUrIiszcXZ5K95SQlkO38SMLM+kdxvy2/I6P/d2g/I80y8DxOzbJ5zRPnfd+0
        yNaBHr37NvkqSR549N97kLLfZgluK8+U0cSNXUI/KbX8XnmcPEgS0fcweW85SVonuc7bSgok/I58luRH
        8VRJEY2eNqLmWWLpzRLcWf6djCZubPLI8Sn5Z/Kp8tclG0YtIL6a3Wc2gvgBoIkEJY+i12nzJSXaZbOX
        gCJ7fCCjiRuDLCH5kXq5JBqrt5JCBBlxLn20ZFXR85J3zLJfsJ00ASxbx1gYgudmQhxZPke7wT3D2TQr
        jdPkrDSiGNrLpTvfLMEDJDup0cT1KrupPF/zqDELkD3G8/5J8vsyes92eWlxxf6SCSA3+F9kNHG9+RN5
        iqTX2izDI8ee8mw5baHEeZByWRwDmyWgsyfHRtHk9STPXC+WPOPOG2zq0aSANNJobuZdypTdS5oluL+8
        UUaT14skVbA8H2vp4kyIa3i0JO/fuQb/Lw0//NlYBuq59fxM/gNJqWLKQ5tf5O6SXmzEBETzN+uyVF8p
        7n7u4Sy51y85H9yj5MbSrAynDOSNj+HxK0uOJe8hzTIQQECDumgCh/ZD8m7SrB4KPLIC+pGM5nYWJCSZ
        VYxXeSvARhZnjNEkDilZcewwm+nhDk+zhllLQiLGYC9pVoAzWlrORpM4lPxCv1neTppciMM/S85CQhLt
        kb3SmxC+UNEkDiVFDHwXr+chksCi6Br0rpfqq4Skimgih/L9cjVlicx0cCy3v+QkI7oePcqxb2Xp6Znj
        t+TQFTjXyes4VPLBM+0hVJjaab0v5y+R20gzIfTW6qXqB/nZu0ozPKTO/pOMrtOQ8gN0rGzRMWZmoC80
        BRCiCW0tv9BDN/Qzt4R67TRa7CU//gb5OGlWCdVOogltLTu/zibqF+rzDx1X8WlJHQSzSshGGzoWmmUY
        EVt+Hu8fjjep/RZdx0pZTdDNldWnWSVctKGfv6ia8hw5Vig1RQ17ihdQjOM+knLBuKWc1eMeCmC0CqXl
        eJXce7NGTpTRxLaSai98YHqHuwjFNvaV1JOjVjkx1GxeTrIa+rFkyUsQEndD+os9Vm4lxwyBNtXn7h+X
        /GCaNbKLHLIGGQkpfNh7hJ1cjhpZKtJwjwIW0XvI8Nvy3ZKz6zFGdDFXb5DZx3B8NikN7aX6FLDc5I4U
        TXAL+ZLzReoJdpZZXXC3Jq0xet0tvFq+XRIAMqajo6dJVi7Re1qt35Xk0pspeZ6MJriFJFD0dBHZSabY
        YtaHNFNqwRHWyYbpGGB/4isyei+TyuPN5tJMCZM4VM23n8keOmFwhEeo75dk9Dp7lE1TylL3XtySDV4q
        uax2Kc8P7SGyVR39med0GU10tYS0Dp2YQurtSyW7uNFrHIM89vy57D3skz0gilWutFnJzv0J0mfjiTxK
        DhG7zJhsNg0FR1zcLcaUqLGSnFi8S7Jc7hmKVf6e5LSCvunUsOPk4RVyN8neiElmqNZJXNSh4EPGBlf0
        umZBAknYtR/7UZ1Jgtjg6INSLTvIQ8DS9lwZvaZZlCPAI6RDiOecS2X0AamUFUTryDDCaNloqzz77llK
        XrOKMXMIm2DRh6JSzkJbRzSR9UbRyOj1zJvnyy2kmRO4w9GdIvowVMlOK3nMLWGjccy76RWy+fgUaeaA
        35XRh6BSQhdbcqDspTJOj7LTTeKNmWE+K6OLXyVJDq3ik3n+J6oteh32llImmx7wZgahKWJ00askmKNV
        VwyaEFwko9dhY4lMHDKewRTB0VZ0was8TLaAMN7Py+g12JWlLJSzwmYEIpK4w0YXukKO71p8eNhZ/7KM
        XoOd3AslnxEzcgj5jC5wheQO7yyr4U7+jzJ6DXb1kihDp1UzUjhSmzZdcDW+VVbD3WdM2WZj8ZuSjrlm
        hJDvHV3UCkl5petqJbeWvZSjnkUJbrqvNCODDhvRBa2Q9rvVtN5UnEeplf5AaUYCG2JctOhiZksFlI1k
        JRRSjMa2+ZIbPpZqNnNPy2X7H8tKKPHbS3eQeZHe4l7GjwDK+EQXMFtWDZW9ytl8Y6MoGtvWSmVa9xjv
        GHbbuUjRxcv2KFkJxRSicXuTBB6SR0gP/YIkgehrksean8ro34xBjt4cH98pxDJHFy1bQikrK3WScRWN
        24NflMfJp8v7y5Xy7SmAwSPI8yWllOgUG/3dHqUiq7uVdsjrZHTBsqVWWRV3kNwNo3GHkpgEApCy4vi3
        ly+UQ5X2Wo1vlqYzLpPRxcqWWuhVHCOjMYeQdkA0Uqhs/kiwCo9BvfSmj9xPmk7YWLboivrPsuqDT8nf
        f5PRuC2lmOTjZUt4BHiWbBnROKnkTPRebXZuoDFCdJGyrQyQGTq3nM0z2jcPWWCRBgb7yOtk9BqHkr0J
        l2buAOpmRxcoU+qzVyVB3E8OeWZOYQby93uBL9WRsmUG4kqS3moG5tMyujiZ0pixipZhu4u9QPba6oi+
        6x+R0etuLT/EvTXHnCtuI1uc2VYt2zeTNF+Mxqz29bL3fl/siVDCuoe7O/sXlYFSZhl2ldFFyXZHWcHL
        ZDRetTyPj4l7y1YnK8t5tDQDcJCMLkimRNxVQEDGEKGu/LiMEZ7dz5DRe2olfd+IBTCNobtmdEEyrQqS
        2UNG41VKR9Wxw3sYcvOSUlSmMR+V0cXItCpo4hQZjVflUL3gKqD1EuHI0fts4WOlaUiLM9eKckNsgl0v
        o/EqvEK27gVXDc0zh9rIZD5738icGSj8UL2Eu1FWRMNxVBONVyEFLGe1qALtqIZqKrmvNA1o0aSBR4MK
        CMCIxquwMhGnByg4wiZZ9N4rpSqv7+oNOFRGFyDT42UFrdpFcTffTs467KMQvRjNQaVPlaYQltMEMEST
        n+kfymyIJ291B/qgnBdeKaM5qJRiG6aQVoUmHiazaRXkg3SUnRf48T9LRvNQaes22XPFSTKa9GwJUc3m
        xTIaK1vqzs/aTvtKULyjdfbb2dIUQFMDapVFk54p+eEVnC6j8bL9K9mKe0oq0bxHsv/wVUl3GZJmyC5k
        d7zVxtUjZcuAGvrTbyVNMnvKaMKzpdBEBfRRj8bLlmSQani0OV9OshF2rTxAtmhIeayMXkOV1OA3ybxX
        RpOd7SdlBa2q1VZ2HyFrkPLaa7lz0vZ5B1kJr48flmj8CulyaxLZRLaKhvqAzIYPYItlJctJxqqA5+Bp
        VyU8FpGQVMnTZDR2lbtIk8T+MprkCisCTQinjcbKltrkFXA0eLGMxlyLZ0r2XCpgF/4SGY1bIY8LJomL
        ZDTJFb5JZvMbMhorWzqwVlCRLfhhWVWTjdDfVoE0VXs6cwc7m0R6RZNcIRVYsmnVH46d/WxYmlZ9aT4l
        q6q30IwhGrPCnaSZEhobRpNbJU0hsqGUcjRWthXNB9hdj8bKkvPoigQistyi8So8XJopob9XNLlV0lAh
        m1Ytl7KrllJ3vsVq6k9lNvx4XCmj8bJ1UYopoZ1tNLGVVtzRqVsejZVtdjIOZ/LRONlyIkG/tmw4v4/G
        y5YToSFr44+eIdoVVSx/qYwSjZVt9munSWI0ToUkK2VvznEk2KoiDZF5Zg2w9KLJQDSplb5TZrO7jMbK
        Nvu1EzwUjVNlxVHVuTIaK9vKjj4zDb+Q0YRW+z6ZzYNlNFa2HFllcrmMxqmSgB/i5zOhIkw0VrbzlBqc
        yltlNKHVcuSTDUUgorGyzQ7JHKLN8VtkJkRVtmj2UVUefKYhjPMmGU1otRXRZXeR0VjZ0tkkM1vsHBmN
        UynP1NlZYa0eQTaVZhW02ryKJJ+7gptlNF62mY0GXi6jMap9rczkNTIaJ1tvyK0ScqqjiWwlu7XZtGot
        lFmldGcZjVHtNTIziKZV04znSjMhd5RDFulHNs+yIZEjGitb9jYyaRV0sljKhmWxsfy5jMbJtCJ8emb5
        IxlNYksJcMnmVTIaK9tvycy74R/IaJxq3yAzYaMyGifT90szIex6R5PY0qNkNr8vo7EqzMyR5kfj4zIa
        p1IedTLh+CsaJ1NXh52QbWXLul9LeZ7MZnPZKnUyO0Jua/ldGY1VJUvt28ssCG2OxsnUR2wTMlTf8MVW
        XbCvyGi8bDmazE7/ZGPu+zIar8rM+PcWj4TU7c98bJpZqCAaTeAQbiGzIRgkGqtC0nuzoVIOjQaj8Sp8
        vsyCH41ojGzZTDbL8AAZTdxQVrTdeYaMxqrwBpm59F0HNePfIaMxs6WyTRbsW0RjZHs3aZaBo4lo4oaS
        aqfZ3FkSzx2NV2FFWSwgcrFFwlHmXsm9ZTRGtveRZgkI22xVDnlSeYyooLpiy/qysUmr5gpaHBdSdTaL
        VmHIrgq7DK3SOFcjO+RUWMnmmTIar0p2yznNyKZFtBnZc1mwConGyJYee2YJyKOOJm1oK7qe8Nzcqkb9
        Or8ouaNlQqOIaKxMafGUBUUtojGypeKvCeACtEr4WK3Z+d3raNV1Zn2JH99RZsEjQTROplfJLO4kozGy
        pdS0CdhbRhPWg+QxVyS4tKrzvlgy8+hkksFhMhoj08/JLLaU0RjZPkiagFalftbqc2QFrZouRn5ETlPJ
        haCQFtl4n5BZ3F1GY2SbmSY8M3DcRDRRNGG9SJx3BXvJaLxWsk9AqCxBMKuBRy3aVkV/M1vaMWfRqpwX
        KwezCPJ3o8nqSY6otpHZcKRINZtozJby/jivJkvtrnI5eC5vGRmXmVzUqrb+RtIsomUzvGmkqX8FrTt/
        riRHinyR3y1JE6WyKdVeTpOt4vTXl6PILA6V0RiZ0i3WLIJnxFbZXNP6PUnoZwU9pOX2KmHRWZwgozEy
        /Zo0i6ANTzRZvUqcegVkhbVsIjkWb5SZhS4/JKNxMqW1tFnEEEvBaaQHXFUK4lClrXs2u1oLq7JonEwp
        F2bWo9UOaLZPkBVsJlsXdujdg2QWZJRFY2T7amnWo6KxfgszkywWQ+x4D9V1epBAJSLZsiDlOBon28wK
        vKPnVvJ6GU3UGKTvdhW9peoOZfYSuMVGHD5EmgUeK6NJGos8q2duEq0PO/ufl9G48+SjZCYkx0TjZEqN
        u+xusKPmdBlN1JisXKJRIOEHMhp3HqR9UiYUgojGyZYMQbMAUUM/kdFEjclvysoIKJoXtE5l7cXMxg1A
        0E80Trb0kjcLtKyZVi3lgyuh/9y8na/TiiubS2U0VrYHSLMAWVPRJI1RknGq64NxxBSNPYtSzDK78m7L
        gqPOWluAhIkW/a9aSqx+1cbcOlotPYf2yTKbVoFIBOO4nvsCL5LRJI3dw2U1z5NjyQtYixXVaikYQr/4
        aLxsz5BmgVbPSq13rAnuaFHil0wuxopew5g9R1asimhgEY1XYVUexOjgyKjVHelASbO76L9VydFKizNU
        yhR9Q0avYYxSQYbqrNnQJrlV+yg2TCmgYgQFBKJJypa+6pvKlp1L13mKbMFWcsgyVFleIPlCVtDq84aZ
        5a5GDZsUV8tokrKlNS6wFGzRD3uxT5ct2FDSkLL3MlxLSXnvW8sK2PT9sYzGrTAz+WbUEAARTVCF3MnX
        wZcu+n8qJRgos1jCSjDWmEJm+WGifFglp8po7Appr0XmoREUIIwmKVtKGd9WroOVROtndbxOrlR7LRNW
        L7QEbpFvPY0cRWbWlY94vIzGrpJiFkawPGu1C/52uZjdZPT/VsuHev0fnRZwnERtux/J6DUNJa+Hu3h1
        vAHtilv376s4+x8le8pogipcKuPpozL6/6slnJNn6dbwhT9CDn2H5zHmjbJV+WMKWkavo8pvySGub5dQ
        lzuapGxJMlnqjrGTHCoi721yqIgpUl4puED31pYx84SyHik5/WjFC2T0WirlPRpBM0HK30aTlO1xcjm4
        s0T/roXVyS+TQFdYouv40ldkxf1QspNOqa2qarlLQWWe1j/kfK69CbfAs2U0SRXeTy4HPzrfkdG/bWEP
        X/Z1ENjDl+MV8q/lWuaFoB0eTXhEeLSsOipbCRJJ2ISNXmOlJ0mzwEUymqRsr5STsI+M/n0raYjQK5tI
        dsQfI/eXRBcicfy4n+TH4b4ys5bbNNxLcsIRzXWlHKlN07dupiB6q9Vz4UvkpNAGOfobrTxZegNnesgt
        GGqFFp3uzC2tEgqomrq1nBR+gG6S0d9qJctl1xZbO6w8hiqNTcDPPaRZ4HIZTVS2a+l0ytI0+lst/bR0
        IsTqoR8AG3/RnLaQMuVmAX5xo0mqcK29y1u051lJni9dHnhyCGkest4ggV+97E90wTEymqhsyc0mGmot
        cDQy5C78Osm2O0SapaEPAMenQxfeOFiaBQgOabUTSsGCaeBYqJfii0R13U6aW7K57KHbLDkT3kRdDxrl
        RxNV4V5yWl4jo789hKTVZpc6HjMc9bWOXY/kOK1lRuIoaFWMjw2ZjMokhM32VJmW5Sl393neqOM5mM9R
        LzXyuBmY9eCL1+roKrOaCzHZ18honKHk+KhVEYte4LGPaEr6okdzMoS036oodTVqaDgQTVaFj5CZEELb
        YweZC+VD5azD6QNHpdEcDCXx7C2Kfo4OGtdHE5bttbIiI+wpste2xTxePEzOGpyL93DUGekSUQEcc7Uq
        RUxxhSoOldGYvcgXflc5dnaR58lea9WfJk0AfaeiCauQxIpKhkxpndSrJB1c7iLHAokzz5Ktkp3WKlGd
        PupcAlrdRpOWLeeZ1bATf7aMxu9NAm54rfScJ7CkN5hLjlzpNNqqa8o0Xi+3lSZgG9nq2fYw2QLyq8+V
        0WvoVb5IPO+SXjrkh5WjwadJjsh6iD6cVEpE0yDDLEGrJoBEsbWqPwYcq9BkIHotY5AAnBMl+QA8E1cU
        q2QVwaMULYkorkHbrV43NJeToJjHSbMMtCOKJi9bjppaQzppb8c+a5VyS3z5qeNHPgIx9nxBCQXmy8rz
        PsEqi91OcpxJ/bkXSgJIWIrzGDULveC4gVCUxCxDy/7T1mbLl5zqOWYFjpfRBFrbuzxicApgVoAdVWpb
        R5Nobc/yTO5WxxOyu4wm0dqe5XSC1k1mQqjjHU2ktb1K1uMsRBY2g6Oa3np8WbucX5GcIJhVsLeMJtPa
        HqX/3lrLjs01Y4sas/MpSTPHyqX68plloFsn9a2jibW2F6na+iRp1ggRUtHEWtuLn5A06zBTwFIomlxr
        h5aQ3JdJL9UTaNXz3NrV+Bm5gzRJUBkkmmhrh/BmSe9338WTOVNGE25tS4lVpzT2FtIUQHucaOKtbeXF
        0kUiivGuux3Ky+QTpGkA5+jUKosuhLUVfl5yJl5R5tsswxkyuiDWZskz+IclWZJmICg9RGmi6AJZO40k
        S50st5emAygGGF0oa1crd++PyX0ldfpMR1ASmd3P6MJZu5J8uS+RlPB2LfXOIfWPEr/RhbR2sSzLPyAP
        li1Ld5sEaF/zLhldWDvfUtGFfnFHyofLDaUZOXtIzjmjC25nW/K+vy75Ur9eUl2VzTQfh80wtPdlo47n
        9xskFTejD4ftUzLAbpI3ymsWvELSX49l96nyaMny+4lyJ7mxNMYYY4wxxhhjjDHGGGOMMcYYY4wxxhhj
        jDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhj
        jDE9scEG/wciLIVZc2SQYgAAAABJRU5ErkJggg==
</value>
  </data>
</root>